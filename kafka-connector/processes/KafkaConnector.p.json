{
  "$schema" : "https://json-schema.axonivy.com/process/12.0.0/process.json",
  "id" : "188492F5DFE91EDF",
  "kind" : "CALLABLE_SUB",
  "config" : {
    "data" : "com.axonivy.connector.kafka.KafkaConnectorData"
  },
  "elements" : [ {
      "id" : "f0",
      "type" : "CallSubStart",
      "name" : "send(String,String,Object,Object,Callback)",
      "config" : {
        "signature" : "send",
        "input" : {
          "params" : [
            { "name" : "configurationName", "type" : "String", "desc" : "" },
            { "name" : "topic", "type" : "String", "desc" : "" },
            { "name" : "key", "type" : "Object", "desc" : "" },
            { "name" : "value", "type" : "Object", "desc" : "" },
            { "name" : "callback", "type" : "org.apache.kafka.clients.producer.Callback", "desc" : "can be null, if not used" }
          ],
          "map" : {
            "out.callback" : "param.#callback",
            "out.configurationName" : "param.configurationName",
            "out.key" : "param.key",
            "out.topic" : "param.topic",
            "out.value" : "param.value"
          }
        },
        "result" : {
          "params" : [
            { "name" : "futureMetadata", "type" : "java.util.concurrent.Future<org.apache.kafka.clients.producer.RecordMetadata>", "desc" : "" }
          ],
          "map" : {
            "result.futureMetadata" : "in.futureMetadata"
          }
        }
      },
      "tags" : [
        "connector"
      ],
      "visual" : {
        "at" : { "x" : 96, "y" : 64 },
        "labelOffset" : { "x" : 49, "y" : 57 },
        "description" : [
          "Send a message.",
          "",
          "<b><font color=\"red\">Please note, that the send will be done in the context of the connector.</font></b>",
          "",
          "If you want to send and receive your own classes viy a schema registry, deserializing will not work using this sub-process, because your classes will not be known to the connector. In this case either create a similiar sub-process in your own project or use the Java version of sending in a script step."
        ],
        "icon" : "res:/webContent/icons/logo.png?small"
      },
      "connect" : [
        { "id" : "f4", "to" : "f3" }
      ]
    }, {
      "id" : "f1",
      "type" : "CallSubEnd",
      "visual" : {
        "at" : { "x" : 352, "y" : 64 }
      }
    }, {
      "id" : "f3",
      "type" : "Script",
      "name" : "Send",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.connector.kafka.KafkaService;",
            "",
            "in.futureMetadata = KafkaService.get().send(in.configurationName, in.topic, in.key, in.value, in.#callback);"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 224, "y" : 64 }
      },
      "connect" : [
        { "id" : "f2", "to" : "f1" }
      ]
    }, {
      "id" : "f5",
      "type" : "ProgramStart",
      "name" : "Kafka Cleanup",
      "config" : {
        "javaClass" : "com.axonivy.connector.kafka.KafkaCleanupStartEventBean",
        "link" : "eventLink.ivp"
      },
      "visual" : {
        "at" : { "x" : 96, "y" : 240 },
        "labelOffset" : { "x" : 13, "y" : 33 }
      },
      "connect" : [
        { "id" : "f7", "to" : "f6" }
      ]
    }, {
      "id" : "f6",
      "type" : "TaskEnd",
      "visual" : {
        "at" : { "x" : 288, "y" : 240 },
        "labelOffset" : { "x" : 13, "y" : 33 }
      }
    } ]
}